mutation {
  multi1: createMultiParent(
    input: {
      multiParent: {
        name: "test multi1"
        multiChildrenUsingIdAndName: {
          create: [{
            name: "child 1 of test multi1"
          }, {
            name: "child 2 of test multi1"
          }]
        }
      }
    }
  ) {
    ...multiParentInfo
  }

  multi2: createMultiChild(
    input: {
      multiChild: {
        name: "test multi2"
        multiParentToParentIdAndParentName: {
          create: {
            name: "parent of child multi2"
          }
        }
      }
    }
  ) {
    ...multiChildInfo
  }

  multi3: createIssue1Parent(
    input: {
      issue1Parent: {
        id: "3ae98218-c9f4-444f-bca0-115cc534198a"
        issue1ChildrenUsingId: {
          create: [{
            name: "issue1 parent"
            serviceId: "test"
            val: "test"
          }]
        }
      }
    }
  ) {
    ...issue1ParentInfo
  }

  multi4: createIssue1Child(
    input: {
      issue1Child: {
        name: "issue1 parent"
        serviceId: "test"
        val: "test"
        issue1ParentToParentId: {
          create: {
            id: "8b8ff23c-b632-46c6-8169-1cd95d1bd44b"
          }
        }
      }
    }
  ) {
    ...issue1ChildInfo
  }
}

fragment multiParentInfo on CreateMultiParentPayload {
  multiParent {
    id
    multiChildrenByParentIdAndParentName {
      nodes {
        id
        parentId
        parentName
      }
    }
  }
}

fragment multiChildInfo on CreateMultiChildPayload {
  multiChild {
    id
    name
    multiParentByParentIdAndParentName {
      id
    }
  }
}

fragment issue1ParentInfo on CreateIssue1ParentPayload {
  issue1Parent {
    id
    issue1ChildrenByParentId {
      nodes {
        parentId
        serviceId
        name
        val
      }
    }
  }
}

fragment issue1ChildInfo on CreateIssue1ChildPayload {
  issue1Child {
    parentId
    serviceId
    name
    val
    issue1ParentByParentId {
      id
    }
  }
}
